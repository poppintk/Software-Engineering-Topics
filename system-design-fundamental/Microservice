Service Discovery and Service Register
  WHY? to simplify the RPC
  - Eureka (stopped)
    - Service Register
      Registering services information(i.e. service name and IP address) into Eureka server
    - Service Discovery
      Get service information(i.e. Map, key is service name and value is IP address) from the Eureka 
    - Resilence 
      - More instances of Eureka service register each other, and require all microservice register to all Eureka during service initialiation
      - AP(CAP) JAVA
      
    1) Start Eureka server
    2) Start microservices and reigster them into Eureka with service name
    3) Consumer services use target service name to get RPC call remote server IP address
    4ï¼‰After get the IP address of removed microservice then use HttpClient call the remove service
    5) Consumer will cache IP address in its JVM memory, by default it will be refreshed 30 seconds
  
  - Zookeeper
    - CP(CAP) JAVA
    
  - Consul
    - CP(CAP) GO
    
  - Nacos
 
  
Service Bus
  - Nacos

Service Configuration Center
  - Config
  - Nacos
  
Circuit break & Rate Limiter & Service Downgrade
  - Hystrix(stoped)
  - resilience4j (popular in NA)
  - Sentinel
          Circut Break
          A service cal B service API, due to network issue or B service issue so that keep waiting. using circuit break allows B to return the downgraded data right away.
          in this case, A not longer waiting for B to execute. This will not imapct the excution chain.

        Downgrade
          entire website on the high peak, service pressure increase. base on the bussiness logic and traficc. now stop the service and return downgrade data to all callers. 


        Circut Breaker vs Downgrade
          same:
            - for availability and reliability, stoping the service
            - user eventually all see some part of feature unavailable
          difference:
            - Circuit breaker is callee on issue, then trigger base on the rule
            - downgrade for entire system concerns, stop some service to release resource


        RateLimiter:
          traffic controll

  
API Gateway
  - Zuul (Stoped) 
  - Spring Gateway
  
LoadBalance
  - Spring Cloud Ribbon(open feign has integrated Ribbon)

RPC Call
  - Ribbon (in maintence)
  - LoadBalancer
  - Feign (stoped)
  - Spring open feign

Service Trace
  - Sleuth

Vistualize Service Trace
  - Zipkin(Twitter)

