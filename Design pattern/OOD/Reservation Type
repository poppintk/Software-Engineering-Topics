Reservation type is base on the management type
example could be 
  Restaurant reservation system
  Hotel Reservation system(LRU cache can be applied)
  Flight/Bus/Train/Movie reservation system
  Booking system (do another search() base on first search() result)
  
Clarify:
  what: consider what can be reserved? table at given time interval, Flight ticket at given time interval
    additional information need to include, flight number, seat number etc
  
  How: 
    Reservation type question following this pattern: Search criteria -> Search() -> List<Result> -> Select() -> Receipt
    - Search
    - Select
    - Cancel
    
    Question should ask:
      1) Search Criteria
        what criteria need to be included?
         EXAMPLE 1:  A restaurant reservation system
          - number of people -> Do we allow it to share table if given people is more than the target table capacity
          - Date -> Do we allow it to reserve a date in a week or month?
          - time -> Do we allow it include all timing?
          Assume that no sharing table, any date and any time. 
            ? findTableReservation(Time timeslot)
            ? findTableReservation(Time timeslot, numPeople)
        
      2) List<Result>
        what typical result looks like?
          Two possbility need to comfirm with interviewer:
          1) Design a algorithm support search() returns List of <Result>
            EXAMPLE 1: A restaurant reservation system, Search() return list of timestamp
            Design: List<Timeslot> findTableReservation(Time timeslot)
           
           
          2) Human input required. after search()
            - if not reservable, then throw exception/show message
              EXAMPLE 1: Design: Pair<Table, Timeslot> findTableForReservation(Time slot) throws NoTableForReservationException
            - if reservable, then show confirmation(confirmation here is "select()")
              EXAMPLE 1: Design: void confirmReservation(Pair<Table, Timeslot> reservation)
                
              how to know if a table is open for reservation for a timeslot?
              if (reserveTimeslot - MAX_DINETIME > CURRENT_TIME) {
                if (no table reservation during reserveTimeslot - MAX_DINETIME to reserveTimeslot + MAX_DINETIME) return true // this required table store sorted list<Timestamp>, can use binary search to find
                else return false
              } else {
                return table.isAvailable();
              }
      
      3) Cancel
        EXAMPLE 1: void canelReservation(Reservation r)
              
Core Object

Case

Class

Correctness
