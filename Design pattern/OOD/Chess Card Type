Example:
  Chess game, Go game
  Tic Tac Toe
  Black Jack
  
Terminology
  - Board
  - Suit
  - Hand: cards on hand
 
use case:
  - Initialization
  - Play
  - Win/Lose check(on each round or each movement)
  

Clarify:
  What: in chess card type, asking question no longer base on input/output
  instead, asking question about Player, Rule, Win/Loss and Score
  - Player
  - Rule
  - Win/Loss/Tie
  - Score
  
-----------------------
Tic Tac Toe (Chess type)
Clarify:
  - Player
    - Do we need to keep tracking of score on each player?
      When do we need player class? Tic Tac Toe doesn't need player class. Whether or not need player classs depends on whether or not each player support score feature
  - Rules
    - Who take first move?
    - what size is the board?
  - Win
    - How to determine win condition
  - Score
    no score supported
    
Core Object
  - TicTacToe
  - Board
  
  
Use Case
  - Initialization board
  - Play
    - Make move
    - Change player
    - Win/Lose check
      check if "X" win/"O" win/game tie OR the board is full(BoardFullException)   
  
---------------------------------------------------------------------
Chinese Chess (Chess Type)

Clarify:
  Player:
    Do we need to supoort matching room rule?
    - score
  
  Rules:
    NOTE: game card type, don't expect to know exactly rule is. just mention throw the InvalidMoveException. Avoid to go into detail implementation of algorithm
    - timing rule
      Do we need to support time limitation for palyer to make a movement
  
  Win/Loss/Tie Condition:
    How to determine a player win?
    How to determine a game is tie?
      - solution1: over certain number of steps then game is tie
      - solution2: let computer decide if all players are repeating the step then game is tie
      - solution3: if all players agree to game tie then game is t      
  Score
    - win +1 score
    - lose -1 score
    - tie 0 score
    
    
Use case
  - initialization
    - join table (For online game)
    - set up game
  - play 
    - make move
    - change player
    - Win/Lose/Tie checked
    - increase steps
    - calculate points(win/lose)

-----------------------------------------------------------------------------------------------------------------------
Black Jack (Card Type)
  - 5 players
  - 1 dealer
  - initialize 2 cards
  - initialize bets
  - Rule at different region might be slightly different
    - 2 - 10 worth 2 - 10 score
    - Jack/Queen/King = 10 score
    - A = 1 or 10 score
    - It is game between dealer and each player
    - Whoever gets 21 score win the bet against dealer. The new card will be draw to player and dealer, whoever gets point more than 21 who lose.OR point greater gets win
    
Clarify
  What (Note: Card Type is only need to consider from player perspective e.g. Player can add card to his/her hand, Place Bets)
    - player
      - Is there a fixed dealer or players take turn to become dealer?
    - rule
      - What if we run out of cards?
      - Can dealer run out of bets?
    - score
      - How many initial bets does a player have?
    
Core Object
  Terminology
    - Player
    - Deck (Desk/Table)
    - Dealer
    - Hand
    - Card
    - Suit
    
Use case
  - Initialization
    - join table
    - Place bet
    - get initial cards
  - Play
    - Deal (asking for new card)
    - Increase bet
    - Stop dealing
  - Win/Lose/Tie check
    - compare score
    - win/lose bets
    
  - Note: need to understand Shuffle algorithm in card game
  
