Class Files -> Class Loader subsystem  -> Runtime Data Area -> Execution engine

Hotspot JVM has method Area, Other JVMs don't have it

Class Loader subsystem
  NOTE: ClassLoader only loard the class file and whether or not it is excutable depends on Execution Engine
  - Loading
    - binary stream -> method area -> entrace of Class loarder (generate the class in the reflection API)
    - supports:
      - loading from internet
      - loading from local files
      - loading from jar 
      - generated at runtime -> dynamic proxy
  - Linking
    - verify
    - Prepare
    - Resolve
  - Initialization
    - clinit(() class init
  
  - types
    BootstrapClassLoader (default path jre/lib)
            |
    ExtensionClassLoader (default path jre/lib/ext)
            |
    AppClassLoader (default path classpath)
    
    - Boo
    - ExtensionClassLoader  - 
    - AppClassLoader- 

    
    - Bootstrap class loader
      - implemented in C++
      - all java core class(package with java, javax or sun) use the Boostrap class loader. i.e. String.getClassloader() -> null
    - User-defined classloader extends Boostrap class loader 
      - User-defined class loader user system class loarder.  UserDefinedClass.getClassloader() -> app class loader

    
