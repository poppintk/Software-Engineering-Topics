Image
    # download image
    docker pull nginx

    # download specific image
    docker pull redis:6.2.4

    # check all downloaded images
    docker images

    # remove docker image 
    docker rmi <IMAGE ID>

Container
    docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

    # -d  -> Runing docker container in background
    # --restart=always -> rebooting docker also restart container
    # -p -> IP mapping from <RUNNING MACHINE> to <CONTAINER> 
    docker run --name=mynginx  -d  --restart=always -p 88:80 nginx

    # check all running containers
    docker ps
    
    # check all containers(including stopped container)
    docker ps -a

    # delete container 
    docker rm  <CONTAINER_ID>/<NAME>
    
    # force to deleting container are currently running  
    docker rm -f mynginx   

    # Stop container
    docker stop <CONTAINER_ID>/<NAME>
    
    # restart container
    docker start <CONTAINER_ID>/<NAME>

    # update container setting 
    docker update <CONTAINER_ID>/<NAME> --restart=always


Change Application Setting inside Container 
    1) Change internal setting
        # enter into application inside container 
        docker exec -it 容器id  /bin/bash
    2) Mounting to external setting 
        docker run --name=mynginx   \
        -d  --restart=always \
        -p  88:80 -v /data/html:/usr/share/nginx/html:ro  \
        nginx


Commit Changes
    1)  Commit to local docker (like git local repo)

    docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]
    docker commit -a "MESSAGE HERE"  -m "YOUR CHANGE" 341d81f7504f guignginx:v1.0

    2) Image Transfer 
        # packaging docker container into tar files
        docker save -o abc.tar guignginx:v1.0

        # share tar files with other machine and other machine can load this tar file into its container local repo
        docker load -i abc.tar



