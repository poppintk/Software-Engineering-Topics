
Oauth2 flow for web server:
   1) client browser click on the Oauth2 login icon, Request to third party for the login with redirect URL(for web server)
   2) Users input their third party login
   3) After authenticate third party authorization server redirect back to the URL(web server) with access token(code)
   4) The web server now can call POST request ask for public protected user information. Note the POST body requires access token(code) just return
   CLIENT_ID, CLIENT_KEY those can be access from the third party
   5) public protected information is returned
   
   
      
      
 SMS API protection:
      Why? public API need be called too often
      - one workable solution is use Redis to save key-value pair key is the phone number and the value is SMS code + current system time
      - Rate limiter can also work
    
          

Scaling
   - sharding is great for scaling write.
   - for scaling read, might not needed because we can use cache for this feature
